import axios from 'axios';
const api = axios.create({
  baseURL: import.meta.env.VITE_API_URL, // e.g. "http://localhost:5000"
});

// Define a TypeScript interface for a Product.
export interface Product {
  _id?: string;           // Optional because it's generated by the database on creation.
  name: string;           // The name of the product.
  description: string;    // A description of the product.
  price: number;          // The price of the product.
  category: string;       // The category the product belongs to (e.g., "Burgers").
  image?: string;         // Optional URL for the product image.
}

// Fetch all products from the backend.
export async function getAllProducts(): Promise<Product[]> {
  const response = await api.get('/api/products');
  return response.data;
}

// Create a new product by sending a POST request.
export async function createProduct(productData: Partial<Product>): Promise<Product> {
  const response = await api.post('/api/products', productData);
  return response.data;
}

// Update an existing product by its ID.
export async function updateProduct(productId: string, productData: Partial<Product>): Promise<Product> {
  const response = await api.put(`/api/products/${productId}`, productData);
  return response.data;
}

// Delete a product by its ID.
export async function deleteProduct(productId: string): Promise<{ message: string }> {
  const response = await api.delete(`/api/products/${productId}`);
  return response.data;
}
